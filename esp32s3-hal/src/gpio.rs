use esp_hal_common::gpio::*;

type OutputSignalType = u16;
const OUTPUT_SIGNAL_MAX: u16 = 256;
const INPUT_SIGNAL_MAX: u16 = 189;

/// Peripheral input signals for the GPIO mux
#[allow(non_camel_case_types)]
#[derive(PartialEq, Copy, Clone)]
pub enum InputSignal {
    SPIQ              = 0,
    SPID              = 1,
    SPIHD             = 2,
    SPIWP             = 3,
    SPID4             = 7,
    SPID5             = 8,
    SPID6             = 9,
    SPID7             = 10,
    SPIDQS            = 11,
    U0RXD             = 12,
    U0CTS             = 13,
    U0DSR             = 14,
    U1RXD             = 15,
    U1CTS             = 16,
    U1DSR             = 17,
    U2RXD             = 18,
    U2CTS             = 19,
    U2DSR             = 20,
    I2S1_MCLK         = 21,
    I2S0O_BCK         = 22,
    I2S0_MCLK         = 23,
    I2S0O_WS          = 24,
    I2S0I_SD          = 25,
    I2S0I_BCK         = 26,
    I2S0I_WS          = 27,
    I2S1O_BCK         = 28,
    I2S1O_WS          = 29,
    I2S1I_SD          = 30,
    I2S1I_BCK         = 31,
    I2S1I_WS          = 32,
    I2S0I_SD1         = 51,
    I2S0I_SD2         = 52,
    I2S0I_SD3         = 53,
    USB_OTG_IDDIG     = 58,
    USB_OTG_AVALID    = 59,
    USB_SRP_BVALID    = 60,
    USB_OTG_VBUSVALID = 61,
    USB_SRP_SESSEND   = 62,
    SPI3_CLK          = 66,
    SPI3_Q            = 67,
    SPI3_D            = 68,
    SPI3_HD           = 69,
    SPI3_WP           = 70,
    SPI3_CS0          = 71,
    I2CEXT0_SCL       = 89,
    I2CEXT0_SDA       = 90,
    I2CEXT1_SCL       = 91,
    I2CEXT1_SDA       = 92,
    FSPICLK           = 101,
    FSPIQ             = 102,
    FSPID             = 103,
    FSPIHD            = 104,
    FSPIWP            = 105,
    FSPIIO4           = 106,
    FSPIIO5           = 107,
    FSPIIO6           = 108,
    FSPIIO7           = 109,
    FSPICS0           = 110,
    SUBSPIQ           = 120,
    SUBSPID           = 121,
    SUBSPIHD          = 122,
    SUBSPIWP          = 123,
    SUBSPID4          = 155,
    SUBSPID5          = 156,
    SUBSPID6          = 157,
    SUBSPID7          = 158,
    SUBSPIDQS         = 159,
    PWM0_SYNC0        = 160,
    PWM0_SYNC1        = 161,
    PWM0_SYNC2        = 162,
    PWM0_F0           = 163,
    PWM0_F1           = 164,
    PWM0_F2           = 165,
    PWM0_CAP0         = 166,
    PWM0_CAP1         = 167,
    PWM0_CAP2         = 168,
    PWM1_SYNC0        = 169,
    PWM1_SYNC1        = 170,
    PWM1_SYNC2        = 171,
    PWM1_F0           = 172,
    PWM1_F1           = 173,
    PWM1_F2           = 174,
    PWM1_CAP0         = 175,
    PWM1_CAP1         = 176,
    PWM1_CAP2         = 177,
    PCMFSYNC          = 188,
    PCMCLK            = 189,
}

/// Peripheral input signals for the GPIO mux
#[allow(non_camel_case_types)]
#[derive(PartialEq, Copy, Clone)]
pub enum OutputSignal {
    SPIQ            = 0,
    SPID            = 1,
    SPIHD           = 2,
    SPIWP           = 3,
    SPICLK          = 4,
    SPICS0          = 5,
    SPICS1          = 6,
    SPID4           = 7,
    SPID5           = 8,
    SPID6           = 9,
    SPID7           = 10,
    SPIDQS          = 11,
    U0TXD           = 12,
    U0RTS           = 13,
    U0DTR           = 14,
    U1TXD           = 15,
    U1RTS           = 16,
    U1DTR           = 17,
    U2TXD           = 18,
    U2RTS           = 19,
    U2DTR           = 20,
    I2S1_MCLK       = 21,
    I2S0O_BCK       = 22,
    I2S0_MCLK       = 23,
    I2S0O_WS        = 24,
    I2S0O_SD        = 25,
    I2S0I_BCK       = 26,
    I2S0I_WS        = 27,
    I2S1O_BCK       = 28,
    I2S1O_WS        = 29,
    I2S1O_SD        = 30,
    I2S1I_BCK       = 31,
    I2S1I_WS        = 32,
    SPI3_CLK        = 66,
    SPI3_Q          = 67,
    SPI3_D          = 68,
    SPI3_HD         = 69,
    SPI3_WP         = 70,
    SPI3_CS0        = 71,
    SPI3_CS1        = 72,
    I2CEXT0_SCL     = 89,
    I2CEXT0_SDA     = 90,
    I2CEXT1_SCL     = 91,
    I2CEXT1_SDA     = 92,
    GPIO_SD0        = 93,
    GPIO_SD1        = 94,
    GPIO_SD2        = 95,
    GPIO_SD3        = 96,
    GPIO_SD4        = 97,
    GPIO_SD5        = 98,
    GPIO_SD6        = 99,
    GPIO_SD7        = 100,
    FSPICLK         = 101,
    FSPIQ           = 102,
    FSPID           = 103,
    FSPIHD          = 104,
    FSPIWP          = 105,
    FSPIIO4         = 106,
    FSPIIO5         = 107,
    FSPIIO6         = 108,
    FSPIIO7         = 109,
    FSPICS0         = 110,
    FSPICS1         = 111,
    FSPICS2         = 112,
    FSPICS3         = 113,
    FSPICS4         = 114,
    FSPICS5         = 115,
    SUBSPICLK       = 119,
    SUBSPIQ         = 120,
    SUBSPID         = 121,
    SUBSPIHD        = 122,
    SUBSPIWP        = 123,
    SUBSPICS0       = 124,
    SUBSPICS1       = 125,
    FSPIDQS         = 126,
    SPI3_CS2        = 127,
    I2S0O_SD1       = 128,
    SUBSPID4        = 155,
    SUBSPID5        = 156,
    SUBSPID6        = 157,
    SUBSPID7        = 158,
    SUBSPIDQS       = 159,
    SDIO_TOHOST_INT = 177,
    PCMFSYNC        = 194,
    PCMCLK          = 195,
    GPIO            = 256,
}

// ESP32S3 is a dual-core chip however pro cpu and app cpu shares the same interrupt enable bit
// see https://github.com/espressif/esp-idf/blob/c04803e88b871a4044da152dfb3699cf47354d18/components/hal/esp32s3/include/hal/gpio_ll.h#L32
// Treating it as SingleCore in the gpio macro makes this work.
gpio! {
    Function1,
    SingleCore,

    Gpio0:  ( gpio0,  0,  gpio[0], IO,  RTC, Bank0),
    Gpio1:  ( gpio1,  1,  gpio[1], IO,  RTC, Bank0),
    Gpio2:  ( gpio2,  2,  gpio[2], IO,  RTC, Bank0),
    Gpio3:  ( gpio3,  3,  gpio[3], IO,  RTC, Bank0),
    Gpio4:  ( gpio4,  4,  gpio[4], IO,  RTC, Bank0),
    Gpio5:  ( gpio5,  5,  gpio[5], IO,  RTC, Bank0),
    Gpio6:  ( gpio6,  6,  gpio[6], IO,  RTC, Bank0),
    Gpio7:  ( gpio7,  7,  gpio[7], IO,  RTC, Bank0),
    Gpio8:  ( gpio8,  8,  gpio[8], IO,  RTC, Bank0), (), (SUBSPICS1: Function3),
    Gpio9:  ( gpio9,  9,  gpio[9], IO,  RTC, Bank0), (SUBSPIHD: Function3, FSPIHD: Function4), (SUBSPIHD: Function3, FSPIHD: Function4),
    Gpio10: (gpio10, 10, gpio[10], IO,  RTC, Bank0), (FSPIIO4: Function2, FSPICS0: Function4), (FSPIIO4: Function2, SUBSPICS0: Function3, FSPICS0: Function4),
    Gpio11: (gpio11, 11, gpio[11], IO,  RTC, Bank0), (FSPIIO5: Function2, SUBSPID: Function3, FSPID: Function4), (FSPIIO5: Function2, SUBSPID: Function3, FSPID: Function4),
    Gpio12: (gpio12, 12, gpio[12], IO,  RTC, Bank0), (FSPIIO6: Function2, FSPICLK: Function4), (FSPIIO6: Function2, SUBSPICLK: Function3, FSPICLK: Function4),
    Gpio13: (gpio13, 13, gpio[13], IO,  RTC, Bank0), (FSPIIO7: Function2, SUBSPIQ: Function3, FSPIQ: Function4), (FSPIIO7: Function2, SUBSPIQ: Function3, FSPIQ: Function4),
    Gpio14: (gpio14, 14, gpio[14], IO,  RTC, Bank0), (SUBSPIWP: Function3, FSPIWP: Function4), (FSPIDQS: Function2,  SUBSPIWP: Function3, FSPIWP: Function4),
    Gpio15: (gpio15, 15, gpio[15], IO,  RTC, Bank0), (), (U0RTS: Function2),
    Gpio16: (gpio16, 16, gpio[16], IO,  RTC, Bank0), (U0CTS: Function2), (),
    Gpio17: (gpio17, 17, gpio[17], IO,  RTC, Bank0), (), (U1TXD: Function2),
    Gpio18: (gpio18, 18, gpio[18], IO,  RTC, Bank0), (U1RXD: Function2), (),
    Gpio19: (gpio19, 19, gpio[19], IO,  RTC, Bank0), (), (U1RTS: Function2),
    Gpio20: (gpio20, 20, gpio[20], IO,  RTC, Bank0), (U1CTS: Function2), (),
    Gpio21: (gpio21, 21, gpio[21], IO,  RTC, Bank0),
    Gpio26: (gpio26, 26, gpio[26], IO,    0, Bank0),
    Gpio27: (gpio27, 27, gpio[27], IO,    0, Bank0),
    Gpio28: (gpio28, 28, gpio[28], IO,    0, Bank0),
    Gpio29: (gpio29, 29, gpio[29], IO,    0, Bank0),
    Gpio30: (gpio30, 30, gpio[30], IO,    0, Bank0),
    Gpio31: (gpio31, 31, gpio[31], IO,    0, Bank0),
    Gpio32: (gpio32, 32, gpio[32], IO,    0, Bank1),
    Gpio33: (gpio33, 33, gpio[33], IO,    0, Bank1), (FSPIHD: Function2, SUBSPIHD: Function3), (FSPIHD: Function2, SUBSPIHD: Function3),
    Gpio34: (gpio34, 34, gpio[34], IO,    0, Bank1), (FSPICS0: Function2), (FSPICS0: Function2, SUBSPICS0: Function3),
    Gpio35: (gpio35, 35, gpio[35], IO,    0, Bank1), (FSPID: Function2, SUBSPID: Function3), (FSPID: Function2, SUBSPID: Function3),
    Gpio36: (gpio36, 36, gpio[36], IO,    0, Bank1), (FSPICLK: Function2), (FSPICLK: Function2, SUBSPICLK: Function3),
    Gpio37: (gpio37, 37, gpio[37], IO,    0, Bank1), (FSPIQ: Function2, SUBSPIQ: Function3, SPIDQS: Function4), (FSPIQ: Function2, SUBSPIQ: Function3, SPIDQS: Function4),
    Gpio38: (gpio38, 38, gpio[38], IO,    0, Bank1), (FSPIWP: Function2, SUBSPIWP: Function3), (FSPIWP: Function3, SUBSPIWP: Function3),
    Gpio39: (gpio39, 39, gpio[39], IO,    0, Bank1), (), (SUBSPICS1: Function4), 
    Gpio40: (gpio40, 40, gpio[40], IO,    0, Bank1),
    Gpio41: (gpio41, 41, gpio[41], IO,    0, Bank1),
    Gpio42: (gpio42, 42, gpio[42], IO,    0, Bank1),
    Gpio43: (gpio43, 43, gpio[43], IO,    0, Bank1),
    Gpio44: (gpio44, 44, gpio[44], IO,    0, Bank1),
    Gpio45: (gpio45, 45, gpio[45], IO,    0, Bank1),
    Gpio46: (gpio46, 46, gpio[46], IO,    0, Bank1),
    Gpio47: (gpio47, 47, gpio[47], IO,    0, Bank1),
    Gpio48: (gpio48, 48, gpio[48], IO,    0, Bank1),
}
