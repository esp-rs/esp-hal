# ESP32-S3 Device Metadata
#
# Empty [`device.driver`] tables imply `partial` support status.
#
# If you modify a driver support status, run `cargo xtask update-chip-support-table` to
# update the table in the esp-hal README.

[device]
name  = "esp32s3"
arch  = "xtensa"
cores = 2
trm   = "https://www.espressif.com/sites/default/files/documentation/esp32-s3_technical_reference_manual_en.pdf"

peripherals = [
    # Peripherals available in the PAC:
    "aes",
    "apb_ctrl",
    "apb_saradc",
    "assist_debug",
    "dma",
    "ds",
    "efuse",
    "extmem",
    "gpio",
    "gpio_sd",
    "hmac",
    "i2c0",
    "i2c1",
    "i2s0",
    "i2s1",
    "interrupt_core0",
    "interrupt_core1",
    "io_mux",
    "lcd_cam",
    "ledc",
    "mcpwm0",
    "mcpwm1",
    "pcnt",
    "peri_backup",
    "rmt",
    "rng",
    "rsa",
    "rtc_cntl",
    "rtc_i2c",
    "rtc_io",
    "sdhost",
    "sens",
    "sensitive",
    "sha",
    "spi0",
    "spi1",
    "spi2",
    "spi3",
    "system",
    "systimer",
    "timg0",
    "timg1",
    "twai0",
    "uart0",
    "uart1",
    "uart2",
    "uhci0",
    "uhci1",
    "usb0",
    "usb_device",
    "usb_wrap",
    "wcl",
    "xts_aes",
]

virtual_peripherals = [
    "adc1",
    "adc2",
]

symbols = [
    # Additional peripherals defined by us (the developers):
    "assist_debug_region_monitor",
    "gdma",
    "phy",
    "psram",
    "psram_dma",
    "octal_psram",
    "ulp_riscv_core",
    "spi_octal",

    # ROM capabilities
    "rom_crc_le",
    "rom_crc_be",
    "rom_md5_bsd",

    # Wakeup SOC based on ESP-IDF:
    "pm_support_ext0_wakeup",
    "pm_support_ext1_wakeup",
    "pm_support_touch_sensor_wakeup",
    "pm_support_wifi_wakeup",
    "pm_support_bt_wakeup",
    "uart_support_wakeup_int",
    "ulp_supported",
    "riscv_coproc_supported",
]

memory = [{ name = "dram", start = 0x3FC8_8000, end = 0x3FD0_0000 }]

[device.adc]
support_status = "partial"
instances = [
    { name = "adc1" },
    { name = "adc2" },
]

[device.gpio]
support_status = "supported"
has_bank_1 = true
gpio_function = 1
input_signal_max = 189
output_signal_max = 256
constant_0_input = 0x3c
constant_1_input = 0x38
instances = [
    { name = "gpio", pins = [
        { pin =  0, kind = ["input", "output", "analog", "rtc"] },
        { pin =  1, kind = ["input", "output", "analog", "rtc"] },
        { pin =  2, kind = ["input", "output", "analog", "rtc"] },
        { pin =  3, kind = ["input", "output", "analog", "rtc"] },
        { pin =  4, kind = ["input", "output", "analog", "rtc"] },
        { pin =  5, kind = ["input", "output", "analog", "rtc"] },
        { pin =  6, kind = ["input", "output", "analog", "rtc"] },
        { pin =  7, kind = ["input", "output", "analog", "rtc"] },
        { pin =  8, kind = ["input", "output", "analog", "rtc"],                                                              af_output = {                3 = "SUBSPICS1"                } },
        { pin =  9, kind = ["input", "output", "analog", "rtc"], af_input = {                3 = "SUBSPIHD", 4 = "FSPIHD"  }, af_output = {                3 = "SUBSPIHD",  4 = "FSPIHD"  } },
        { pin = 10, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "FSPIIO4",                 4 = "FSPICS0" }, af_output = { 2 = "FSPIIO4", 3 = "SUBSPICS0", 4 = "FSPICS0" } },
        { pin = 11, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "FSPIIO5", 3 = "SUBSPID",  4 = "FSPID"   }, af_output = { 2 = "FSPIIO5", 3 = "SUBSPID",   4 = "FSPID"   } },
        { pin = 12, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "FSPIIO6",                 4 = "FSPICLK" }, af_output = { 2 = "FSPIIO6", 3 = "SUBSPICLK", 4 = "FSPICLK" } },
        { pin = 13, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "FSPIIO7", 3 = "SUBSPIQ",  4 = "FSPIQ"   }, af_output = { 2 = "FSPIIO7", 3 = "SUBSPIQ",   4 = "FSPIQ"   } },
        { pin = 14, kind = ["input", "output", "analog", "rtc"], af_input = {                3 = "SUBSPIWP", 4 = "FSPIWP"  }, af_output = { 2 = "FSPIDQS", 3 = "SUBSPIWP",  4 = "FSPIWP"  } },
        { pin = 15, kind = ["input", "output", "analog", "rtc"],                                                              af_output = { 2 = "U0RTS" } },
        { pin = 16, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "U0CTS" } },
        { pin = 17, kind = ["input", "output", "analog", "rtc"],                                                              af_output = { 2 = "U1TXD" } },
        { pin = 18, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "U1RXD" } },
        { pin = 19, kind = ["input", "output", "analog", "rtc"],                                                              af_output = { 2 = "U1RTS" } },
        { pin = 20, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "U1CTS" } },
        { pin = 21, kind = ["input", "output", "analog", "rtc"] },

        { pin = 26, kind = ["input", "output"] },
        { pin = 27, kind = ["input", "output"] },
        { pin = 28, kind = ["input", "output"] },
        { pin = 29, kind = ["input", "output"] },
        { pin = 30, kind = ["input", "output"] },
        { pin = 31, kind = ["input", "output"] },
        { pin = 32, kind = ["input", "output"] },
        { pin = 33, kind = ["input", "output"], af_input = { 2 = "FSPIHD", 3 = "SUBSPIHD"              }, af_output = { 2 = "FSPIHD",  3 = "SUBSPIHD"              } },
        { pin = 34, kind = ["input", "output"], af_input = { 2 = "FSPICS0"                             }, af_output = { 2 = "FSPICS0", 3 = "SUBSPICS0"             } },
        { pin = 35, kind = ["input", "output"], af_input = { 2 = "FSPID",  3 = "SUBSPID"               }, af_output = { 2 = "FSPID",   3 = "SUBSPID"               } },
        { pin = 36, kind = ["input", "output"], af_input = { 2 = "FSPICLK"                             }, af_output = { 2 = "FSPICLK", 3 = "SUBSPICLK"             } },
        { pin = 37, kind = ["input", "output"], af_input = { 2 = "FSPIQ",  3 = "SUBSPIQ", 4 = "SPIDQS" }, af_output = { 2 = "FSPIQ",   3 = "SUBSPIQ", 4 = "SPIDQS" } },
        { pin = 38, kind = ["input", "output"], af_input = { 2 = "FSPIWP", 3 = "SUBSPIWP"              }, af_output = { 2 = "FSPIWP",  3 = "SUBSPIWP"              } },
        { pin = 39, kind = ["input", "output"],                                                           af_output = {                3 = "SUBSPICS1"             } },
        { pin = 40, kind = ["input", "output"] },
        { pin = 41, kind = ["input", "output"] },
        { pin = 42, kind = ["input", "output"] },
        { pin = 43, kind = ["input", "output"] },
        { pin = 44, kind = ["input", "output"] },
        { pin = 45, kind = ["input", "output"] },
        { pin = 46, kind = ["input", "output"] },
        { pin = 47, kind = ["input", "output"] },
        { pin = 48, kind = ["input", "output"] },
    ] },
]

[device.i2c_master]
support_status = "supported"
instances = [{ name = "i2c0" }, { name = "i2c1" }]
has_fsm_timeouts = true
has_hw_bus_clear = true
ll_intr_mask = 0x3ffff
fifo_size = 32
has_bus_timeout_enable = true
max_bus_timeout = 0x1F
can_estimate_nack_reason = true
has_conf_update = true
has_arbitration_en = true
has_tx_fifo_watermark = true
bus_timeout_is_exponential = true

[device.interrupts]
support_status = "partial"
status_registers = 4

[device.rmt]
support_status = "partial"
ram_start = 0x60016800
channel_ram_size = 48

[device.spi_master]
support_status = "supported"
instances = [{ name = "spi2" }, { name = "spi3" }]

[device.timergroup]
timg_has_timer1 = true
instances = [{ name = "timg0" }, { name = "timg1" }]

[device.uart]
support_status = "supported"

[device.touch]
support_status = "not_supported"

[device.ds]
support_status = "not_supported"

# Other drivers which are partially supported but have no other configuration:

## Crypto
[device.aes]
[device.rsa]
[device.hmac]
[device.sha]
[device.rng]

## Interfaces
[device.i2s]
[device.camera]
[device.rgb_display]
[device.ledc]
[device.mcpwm]
[device.pcnt]
[device.sd_host]
[device.spi_slave]
[device.twai]
[device.usb_otg]
[device.usb_serial_jtag]

## Miscellaneous
[device.assist_debug]
[device.dma]
[device.io_mux]
[device.psram]
[device.sleep]
[device.systimer]
[device.temp_sensor]
[device.ulp_fsm]
[device.ulp_riscv]

## Radio
[device.wifi]
[device.bt]
