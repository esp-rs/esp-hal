# ESP32-C2 Device Metadata
#
# Empty [`device.driver`] tables imply `partial` support status.
#
# If you modify a driver support status, run `cargo xtask update-chip-support-table` to
# update the table in the esp-hal README.

[device]
name  = "esp32c2"
arch  = "riscv"
cores = 1
trm   = "https://www.espressif.com/sites/default/files/documentation/esp8684_technical_reference_manual_en.pdf"

peripherals = [
    # Peripherals available in the PAC:
    "apb_ctrl",
    "apb_saradc",
    "assist_debug",
    "dma",
    "ecc",
    "efuse",
    "extmem",
    "gpio",
    "i2c0",
    "interrupt_core0",
    "io_mux",
    "ledc",
    "rng",
    "rtc_cntl",
    "sensitive",
    "sha",
    "spi0",
    "spi1",
    "spi2",
    "system",
    "systimer",
    "timg0",
    "uart0",
    "uart1",
    "xts_aes",
]

virtual_peripherals = [
    "adc1",
]

symbols = [
    # Additional peripherals defined by us (the developers):
    "assist_debug_sp_monitor",
    "gdma",
    "phy",

    # ROM capabilities
    "rom_crc_le",
    "rom_crc_be",
    "rom_md5_mbedtls",

    # Wakeup SOC based on ESP-IDF:
    "pm_support_wifi_wakeup",
    "pm_support_bt_wakeup",
    "uart_support_wakeup_int",
    "gpio_support_deepsleep_wakeup",
]

memory = [{ name = "dram", start = 0x3FCA_0000, end = 0x3FCE_0000 }]

[device.adc]
support_status = "partial"
instances = [
    { name = "adc1" },
]

[device.gpio]
support_status = "supported"
gpio_function = 1
input_signal_max = 100
output_signal_max = 128
constant_0_input = 0x1f
constant_1_input = 0x1e
instances = [
    { name = "gpio", pins = [
        { pin =  0, kind = ["input", "output", "analog", "rtc"] },
        { pin =  1, kind = ["input", "output", "analog", "rtc"] },
        { pin =  2, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "FSPIQ" },   af_output = { 2 = "FSPIQ" } },
        { pin =  3, kind = ["input", "output", "analog", "rtc"] },
        { pin =  4, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "FSPIHD" },  af_output = { 2 = "FSPIHD" } },
        { pin =  5, kind = ["input", "output", "analog", "rtc"], af_input = { 2 = "FSPIWP" },  af_output = { 2 = "FSPIWP" } },
        { pin =  6, kind = ["input", "output"],                  af_input = { 2 = "FSPICLK" }, af_output = { 2 = "FSPICLK_MUX" } },
        { pin =  7, kind = ["input", "output"],                  af_input = { 2 = "FSPID" },   af_output = { 2 = "FSPID" } },
        { pin =  8, kind = ["input", "output"] },
        { pin =  9, kind = ["input", "output"] },
        { pin = 10, kind = ["input", "output"],                  af_input = { 2 = "FSPICS0" }, af_output = { 2 = "FSPICS0" } },
        { pin = 18, kind = ["input", "output"] },
        { pin = 19, kind = ["input", "output"] },
        { pin = 20, kind = ["input", "output"],                  af_input = { 0 = "U0RXD" } },
    ] },
]

[device.i2c_master]
support_status = "supported"
instances = [{ name = "i2c0" }]
has_fsm_timeouts = true
has_hw_bus_clear = true
ll_intr_mask = 0x3ffff
fifo_size = 16
has_bus_timeout_enable = true
max_bus_timeout = 0x1F
has_conf_update = true
has_arbitration_en = true
has_tx_fifo_watermark = true
bus_timeout_is_exponential = true

[device.interrupts]
support_status = "partial"
status_registers = 2

[device.spi_master]
support_status = "supported"
instances = [{ name = "spi2" }]

[device.timergroup]
instances = [{ name = "timg0" }]

[device.uart]
support_status = "supported"

# Other drivers which are partially supported but have no other configuration:

## Crypto
# [device.aes] Product portfolio lists AES, but TRM only has XTS_AES?
[device.ecc]
[device.sha]
[device.rng]

## Interfaces
[device.ledc]
[device.spi_slave]

## Miscellaneous
[device.assist_debug]
[device.dma]
[device.io_mux]
[device.temp_sensor]
[device.sleep]
[device.systimer]

## Radio
[device.wifi]
[device.bt]
