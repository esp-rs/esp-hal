[package]
name    = "examples"
version = "0.0.0"
edition = "2024"
license = "MIT OR Apache-2.0"
publish = false

[dependencies]
aligned             = { version = "0.4.2", optional = true }
bleps               = { git = "https://github.com/bjoernQ/bleps", package = "bleps", rev = "a5148d8ae679e021b78f53fd33afb8bb35d0b62e", features = [ "macros", "async"] }
blocking-network-stack = { git = "https://github.com/bjoernQ/blocking-network-stack.git", rev = "b3ecefc222d8806edd221f266999ca339c52d34e" }
cfg-if              = "1.0.0"
critical-section    = "1.1.3"
embassy-executor    = { version = "0.7.0", features = ["task-arena-size-20480"] }
embassy-futures     = "0.1.1"
embassy-net = { version = "0.6.0", features = [ "tcp", "udp", "dhcpv4", "medium-ethernet"] }
embassy-sync        = "0.6.2"
embassy-time        = "0.4.0"
embassy-usb         = { version = "0.4.0", default-features = false }
embedded-hal-async  = "1.0.0"
embedded-io         = { version = "0.6.1", default-features = false }
embedded-io-async   = "0.6.1"
embedded-storage    = "0.3.1"
esp-alloc           = { path = "../esp-alloc" }
esp-backtrace       = { path = "../esp-backtrace", features = ["exception-handler", "panic-handler", "println"] }
esp-bootloader-esp-idf = { path = "../esp-bootloader-esp-idf" }
esp-hal             = { path = "../esp-hal", features = ["log-04"] }
esp-hal-embassy     = { path = "../esp-hal-embassy", optional = true }
esp-ieee802154      = { path = "../esp-ieee802154", optional = true }
esp-println         = { path = "../esp-println", features = ["log-04"] }
esp-storage         = { path = "../esp-storage", optional = true }
esp-wifi            = { path = "../esp-wifi", features = ["log-04"], optional = true }
heapless            = "0.8.0"
hmac                = { version = "0.12.1", default-features = false }
ieee80211           = { version = "0.4.0", default-features = false }
ieee802154          = "0.6.1"
log                 = "0.4.27"
nb                  = "1.1.0"
sha2                = { version = "0.10.8", default-features = false }
smoltcp             = { version = "0.12.0", default-features = false, features = [ "medium-ethernet", "socket-raw"] }
static_cell         = { version = "2.1.0" }
usb-device          = "0.3.2"
usbd-serial         = "0.2.2"
edge-dhcp           = { version = "0.5.0" }
edge-nal            = { version = "0.5.0" }
edge-nal-embassy    = { version = "0.5.0" }

[features]
esp32   = ["esp-hal/esp32",   "esp-backtrace/esp32",   "esp-hal-embassy?/esp32",   "esp-println/esp32",   "esp-storage?/esp32",   "esp-wifi?/esp32",   "esp-bootloader-esp-idf/esp32"]
esp32c2 = ["esp-hal/esp32c2", "esp-backtrace/esp32c2", "esp-hal-embassy?/esp32c2", "esp-println/esp32c2", "esp-storage?/esp32c2", "esp-wifi?/esp32c2", "esp-bootloader-esp-idf/esp32c2"]
esp32c3 = ["esp-hal/esp32c3", "esp-backtrace/esp32c3", "esp-hal-embassy?/esp32c3", "esp-println/esp32c3", "esp-storage?/esp32c3", "esp-wifi?/esp32c3", "esp-bootloader-esp-idf/esp32c3"]
esp32c6 = ["esp-hal/esp32c6", "esp-backtrace/esp32c6", "esp-hal-embassy?/esp32c6", "esp-println/esp32c6", "esp-storage?/esp32c6", "esp-wifi?/esp32c6", "esp-bootloader-esp-idf/esp32c6", "esp-ieee802154?/esp32c6"]
esp32h2 = ["esp-hal/esp32h2", "esp-backtrace/esp32h2", "esp-hal-embassy?/esp32h2", "esp-println/esp32h2", "esp-storage?/esp32h2", "esp-wifi?/esp32h2", "esp-bootloader-esp-idf/esp32h2", "esp-ieee802154?/esp32h2"]
esp32s2 = ["esp-hal/esp32s2", "esp-backtrace/esp32s2", "esp-hal-embassy?/esp32s2", "esp-println/esp32s2", "esp-storage?/esp32s2", "esp-wifi?/esp32s2", "esp-bootloader-esp-idf/esp32s2"]
esp32s3 = ["esp-hal/esp32s3", "esp-backtrace/esp32s3", "esp-hal-embassy?/esp32s3", "esp-println/esp32s3", "esp-storage?/esp32s3", "esp-wifi?/esp32s3", "esp-bootloader-esp-idf/esp32s3"]

esp-wifi = ["dep:esp-wifi"]

embassy                = ["dep:esp-hal-embassy"]

[profile.release]
codegen-units    = 1
debug            = 2
debug-assertions = true
incremental      = false
opt-level        = 3
lto = 'fat'
overflow-checks  = false
